classdef MeasurementRun < handle
    
    properties(Constant)
        OPT_PATH_GAIN = 1;
        OPT_KFACTOR = 2;
        OPT_DELAY_SPREAD = 3;
        OPT_AVGCIR = 4;
        OPT_NTAP_APPROX = 5;
        OPT_WRITE_STATS = 6;
        OPT_DO_PLOTS = 7;     

        NtapApprox_N = 48;

        metrics_tbl_colnames = { ...
            MeasurementRunMetric.Site.getName(), ...
            MeasurementRunMetric.Freq.getName(), ...
            MeasurementRunMetric.MetalCanyon.getName(), ...
            MeasurementRunMetric.Polarization.getName(), ...
            MeasurementRunMetric.CoordX.getName(), ...
            MeasurementRunMetric.CoordY.getName(), ...
            MeasurementRunMetric.LOS.getName(), ...
            MeasurementRunMetric.RicianK.getName(), ...
            MeasurementRunMetric.RMSDelaySpread.getName(), ...
            MeasurementRunMetric.MeanDelay.getName(), ...
            MeasurementRunMetric.MaxDelay.getName(), ...
            MeasurementRunMetric.PathGain.getName() };
            % 
            % 'Site', 'Freq', 'MetalCanyon', 'Polarization', 'TxPos',  ...
            % 'CoordX', 'CoordY', 'xAntPos', 'yAntPos', ...
            % 'LOS', 'RicianK', 'RMSDelaySpread', 'MeanDelay', ...
            % 'MaxDelay', 'PathGain'};   
        metrics_tbl_vartypes = { ...
            MeasurementRunMetric.Site.getType(), ...
            MeasurementRunMetric.Freq.getType(), ...
            MeasurementRunMetric.MetalCanyon.getType(), ...
            MeasurementRunMetric.Polarization.getType(), ...
            MeasurementRunMetric.CoordX.getType(), ...
            MeasurementRunMetric.CoordY.getType(), ...
            MeasurementRunMetric.LOS.getType(), ...
            MeasurementRunMetric.RicianK.getType(), ...
            MeasurementRunMetric.RMSDelaySpread.getType(), ...
            MeasurementRunMetric.MeanDelay.getType(), ...
            MeasurementRunMetric.MaxDelay.getType(), ...
            MeasurementRunMetric.PathGain.getType };        

        % order of column names
        NBaseColumnNames = 8;

    end
    
    properties

        OPTS = zeros(7,1);

        AI_METRICS_FNAME_OUT = 'aimetrics.csv';
        AI_REDTAP_FNAME_OUT = 'airedtap.csv';

        manifest = [];

    end
    
    methods
        function obj = MeasurementRun(OPTS, manifest)
            obj.manifest = manifest;
            if nargin < 1
                obj.OPTS = [ 1; 1; 1; 1; 1; 0; 0];
            else
                obj.OPTS = OPTS;
            end
        end
    end
end

